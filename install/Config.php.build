<?php

namespace Jet\App\Engine\Config;

/**
 * Class Config
 * @package Jet\App\Engine\Config
 * Be aware that all config properties MUST be read-only
 * Do not change the config file after building! If you want to make changes - change Config.php.build in the 'install' directory then build again.
 */
class Config
{
    /**
     * @var array
     */
    public static $db = [
        // authorization data
        // you can set it up to use environmental variables
        'host' => '',
        'username' => '',
        'database' => '',
        'password' => '',

        // connection params
        'params' => [
            'charset' => 'utf8mb4',
            'engine' => 'InnoDB',
            // if true, PHPJet will not actually delete files,
            // it will just mark is as 'deleted' and ignore while selecting/updating etc.
            // but keep in mind that this feature uses 'views', so you most likely have to update views after changing this value
            // just run php index.php configure views --update
            'emulate_deletion' => true
        ]
    ];
    /**
     * @var array
     */
    public static $config = [
        'developer_email' => 'dev@modware.ru',
        'admin_email' => 'admin@modware.ru',
        'service_email' => 'service@modware.ru',
        'controllers' => [
            'client' => [
                'Main',
                'Search',
                'Page',

                // todo: these controllers should be entirely redone
                'errorpage',
                'sitemap',
                'robots'
            ],
            'admin' => [
                'Main',
                'Auth',
                'Admin',
                'Record',

                // deprecated
                'misc',
                'info',
                'statistics',
                'pages'
            ]
        ],
        'protocol' => 'http://',
        'widgets' => [
            // todo also separate it by client and admin
            // todo and maybe do it like in Tool class -> dynamically load classes if needed, it'd be much better
            'client' => [
                'WidgetLogotype',
                'WidgetTheme',
                'WidgetSEO',
                'WidgetBanner',
                'WidgetHot',
                'WidgetMenu',
            ],
            'admin' => [
                'WidgetMisc'
            ]
        ],
        'site_id' => 0,
        'site_name' => 'Default',
        'admin' => false
    ];
    /**
     * @var array
     */
    public static $page = [
        'default_page_title' => 'Demo'
    ];
    /**
     * @var array
     */
    public static $pageBuilder = [
        'client' => [
            'active' => false
        ],
        'admin' => [
            // should always be false
            'active' => false
        ]
    ];
    /**
     * @var array
     */
    public static $availableThemes = [
        'admin' => [
            'default' => [
                'layout' => 'phpjetdesktop',
                'views' => 'phpjetdesktop',
                'mail' => 'phpjetdesktop',
                'static' => 'phpjetdesktop',
                'parts' => 'phpjetdesktop',
                // should always be false for admin
                // themes for admin panel are not supported yet
                'pagebuilder' => false,
                'SPA' => true
            ]
        ],
        'client' => [
            // default theme should not be deleted
            'default' => [
                'layout' => 'default',
                'views' => 'default',
                'mail' => 'default',
                'static' => 'default',
                'parts' => 'default',
                'pagebuilder' => false,
                'SPA' => false
            ],
        ]
    ];
    /**
     * @var array
     */
    public static $mail = [
        'email' => 'robot@modware.ru',
        'password' => '1234'
    ];
    /**
     * @var array
     */
    public static $dev = [
        // should be disabled on production
        'debug' => true
    ];
    /**
     * @var array
     */
    public static $secure = [
        // should be enabled on production
        'httpsOnly' => false
    ];
    /**
     * @var array
     */
    public static $urlRules = [
        // subdomain => sector
        'admin' => 'admin',
        'common' => 'common',
        '' => 'client'
    ];
    /**
     * @var string[]
     */
    public static $uploads = [
        'max_file_size' => '16M'
    ];
}
